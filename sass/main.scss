* {
  margin: 0;
  padding: 0;
}

.container {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;

  display: grid;

  // more items than defined cells will cause an implicit grid (an additional row)
  grid-template-rows: repeat(2, 150px); //creating a track for rows
  //grid-template-columns: repeat(2, 150px) 1fr; //fr expands to all space it can occupy

  // grid-template-columns: repeat(3, 1fr);

  // grid-template-columns: 1fr 2fr 1fr; //all empty space is divided 2 fraction for 2nd column

  // grid-template-columns: 50% 1fr 1fr; //% doesn't take gap into account

  grid-template-columns: repeat(3, 1fr);

  // grid-row-gap: 20px;
  // grid-column-gap: 50px;
  grid-gap: 30px;
}

.item {
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
  color: white;

  &--1 {
    background-color: orangered;

    // grid-row-start: 2;
    // grid-row-end: 3;
    // grid-column-start: 2;
    // grid-column-end: 3;

    grid-row: 2 / 3;
    grid-column: 2 / 3;

    z-index: 10;
  }

  &--2 {
    background-color: yellowgreen;

    // grid-column: 2 / span 2;
    grid-column: 1 / -1;
    // grid-row: 1 / 2;
  }

  &--3 {
    background-color: blueviolet;
    grid-row: 2 / 3;
    grid-column: 1 / 3;
  }

  &--4 {
    background-color: palevioletred;
  }

  &--5 {
    background-color: royalblue;
    // grid-row: 1 / 2;
    // grid-column: 3 / 4;
    grid-area: 1 / 3 / 3 / 4;
  }

  &--6 {
    background-color: goldenrod;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    // grid-area: 1 / 2 / 2 / 3;
  }
}

//CHALLENGE

// METHOD 1: LINE NUMBERS
// grid-template-rows: repeat(3, 1fr) 200px;
// grid-template-columns: 100px 300px 600px 100px;
/*
.challenge {
  display: grid;
  width: 50%;
  margin: 0 auto;

  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 2fr) 1.2fr;
  background-color: grey;
  gap: 30px;

  & > * {
    background-color: red;
    color: #fff;
    font-size: 26px;
    font-family: sans-serif;
    padding: 20px;
  }
}

.header {
  grid-column: 1 / -1;
}

.sidebar {
  grid-row: 2 / span 2;
  // grid-column: 4 / 5; //is automatically placed in 4th column
}

.main-content {
  grid-column: 1 / span 3;
  grid-row: 3/ 4;
}

.footer {
  grid-row: 4/ 5;
  grid-column: 1/ -1;
}
*/

// METHOD 2: LINE NAMES
/*
.challenge {
  display: grid;
  width: 50%;
  margin: 0 auto;

  grid-template-rows: [header-start] 100px [header-end box-start] 200px [box-end main-start] 400px [main-end footer-start] 100px [footer-end];

  //[] grid name on repeat will create nameset of grid lines
  grid-template-columns: repeat(3, [col-start] 2fr [col-end]) 1.2fr [grid-end];
  background-color: grey;
  gap: 30px;

  & > * {
    background-color: red;
    color: #fff;
    font-size: 26px;
    font-family: sans-serif;
    padding: 20px;
  }
}

.header {
  grid-column: col-start 1 / grid-end;
}

.sidebar {
  grid-column: col-end 3 / grid-end;
  grid-row: box-start / main-end;
}

.main-content {
  grid-column: col-start 1 / col-end 3;
  grid-row: 3/ 4;
}

.footer {
  grid-row: footer-start / footer-end;
  grid-column: col-start 1 / grid-end;
}
*/

// METHOD 3: NAME GRID AREAS
.challenge {
  display: grid;
  width: 50%;
  margin: 0 auto;

  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 2fr) 1.2fr;
  background-color: grey;
  gap: 30px;

  // must fill are 16 cells, otherwise an error will be shown
  grid-template-areas:
    '. head head hello'
    'box-1 box-2 box-3 side'
    'main main main side'
    'foot foot foot foot';

  & > * {
    background-color: red;
    color: #fff;
    font-size: 26px;
    font-family: sans-serif;
    padding: 20px;
  }
}

.small-box {
  grid-area: box;

  &--1 {
    grid-area: box-1;
  }

  &--2 {
    grid-area: box-2;
  }

  &--3 {
    grid-area: box-3;
  }
}

.header {
  grid-area: head;
}

.sidebar {
  grid-area: side;
}

.main-content {
  grid-area: main;
}

.footer {
  grid-area: foot;
}
